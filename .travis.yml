language: php

# list any PHP version you want to test against
php:
  # using major version aliases

  # aliased to a recent 5.5.x version
  - 5.5
  # aliased to a recent 5.6.x version
  - 5.6

# optionally specify a list of environments, for example to test different RDBMS
env:
  - DB=mysql

# optionally set up exclutions and allowed failures in the matrix
#matrix:
#  allow_failures:
#    - php: 7.0
#    - php: hhvm

# execute any number of scripts before the test run, custom env's are available as variables
before_script:
  - if [[ "$DB" == "mysql" ]]; then mysql -e "DROP DATABASE IF EXISTS stores_test;" -uroot; fi
  - if [[ "$DB" == "mysql" ]]; then mysql -e "CREATE DATABASE stores_test;" -uroot; fi
  - if [[ "$DB" == "mysql" ]]; then mysql -e "CREATE TABLE IF NOT EXISTS `stores` (`id` int(11) NOT NULL AUTO_INCREMENT,`name` varchar(50) COLLATE latin1_general_ci NOT NULL,`address` varchar(200) COLLATE latin1_general_ci NOT NULL,`phone` varchar(15) COLLATE latin1_general_ci NOT NULL,`email` varchar(100) COLLATE latin1_general_ci NOT NULL,PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;" -uroot; fi
  - if [[ "$DB" == "mysql" ]]; then mysql -e "CREATE TABLE IF NOT EXISTS `store_products` (`store_id` int(50) NOT NULL,`product_id` int(50) NOT NULL,KEY `store_id` (`store_id`)) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;" -uroot; fi
  - if [[ "$DB" == "mysql" ]]; then mysql -e "ALTER TABLE `store_products` ADD CONSTRAINT `store_products_ibfk_1` FOREIGN KEY (`store_id`) REFERENCES `stores` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION;" -uroot; fi
  - if [[ "$DB" == "mysql" ]]; then mysql -e "INSERT INTO `stores` (`id`, `name`, `address`, `phone`, `email`) VALUES (NULL, 'Test 1', 'Test address', '1234567', 'test@email.com'), (NULL, 'Test 2', 'Test address 2', '2345678', 'test2@email.com');" -uroot; fi
  - if [[ "$DB" == "mysql" ]]; then mysql -e "INSERT INTO `store_products` (`store_id`, `product_id`) VALUES ('1', '1'), ('2', '2'), ('2', '3'), ('1', '2'), ('1', '4');" -uroot; fi

# omitting "script:" will default to phpunit
# use the $DB env variable to determine the phpunit.xml to use
#script: phpunit --configuration phpunit_$DB.xml --coverage-text
script: phpunit --configuration robot/phpunit_mysql.xml --coverage-text


before_deploy:
  - openssl aes-256-cbc -K $encrypted_2390d7ff4426_key -iv $encrypted_2390d7ff4426_iv -in stores.enc -out stores -d
  - chmod 600 stores

deploy:
  - provider: script
    skip_cleanup: true
    script: ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -tt -i stores ubuntu@stores.arcada.nitor.zone /home/ubuntu/update.sh
    on:
      branch: master
